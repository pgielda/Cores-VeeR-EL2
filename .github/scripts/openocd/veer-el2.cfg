if { [info exists CHIPNAME] } {
   set  _CHIPNAME $CHIPNAME
} else {
   set  _CHIPNAME riscv
}

jtag newtap $_CHIPNAME tap -irlen 5
set _TARGETNAME $_CHIPNAME.tap
target create $_TARGETNAME.0 riscv -chain-position $_TARGETNAME -rtos hwthread

# Configure work area in on-chip SRAM
$_TARGETNAME.0 configure -work-area-phys 0x50001000 -work-area-size 0x1000 -work-area-backup 0

$_TARGETNAME.0 configure -event gdb-detach {
    resume
    shutdown
}

$_TARGETNAME.0 riscv expose_csrs 1968=dcsr
$_TARGETNAME.0 riscv expose_csrs 1969=dpc
$_TARGETNAME.0 riscv expose_csrs 1988=dmst
$_TARGETNAME.0 riscv expose_csrs 1992=dicawics
$_TARGETNAME.0 riscv expose_csrs 1996=dicad0h
$_TARGETNAME.0 riscv expose_csrs 1993=dicad0
$_TARGETNAME.0 riscv expose_csrs 1994=dicad1
$_TARGETNAME.0 riscv expose_csrs 1995=dicago

$_TARGETNAME.0 configure -event halted {
    echo "Starting ICache line read"
    # 1. Write dicawics: array=0 way=0 index=16
    reg csr_dicawics 128
    # 2. Read to dicago to trigger Icache read operation
    reg csr_dicago
    # 3. get line chunk from dicad0 and dicad0h, and parity from dicad1
    reg csr_dicad0
    reg csr_dicad0h
    reg csr_dicad1

    echo "Starting ICache line write"
    # 1. Write dicawics: array=0 way=0 index=8
    reg csr_dicawics 64
    # 2. Write instruction data to dicad0 and dicad0h, and parity to dicad1
    # [31:16] have two ones and [15:0] have two ones in order to make parity 0
    reg csr_dicad0 0x30c00
    reg csr_dicad0h 0xc00c0
    # parity is 0.
    # TODO do we need to set anything ECC-related?
    reg csr_dicad1 0x0
    # 3. Write 1 to dicago to trigger Icache write operation
    reg csr_dicago 1

    echo "Starting ICache tag and status read"
    # 1. Write dicawics: array=1 way=0 index=8
    reg csr_dicawics 0x1000040
    # 2. Read to dicago to trigger Icache read operation
    reg csr_dicago
    # 3. get tag from dicad0, and parity from dicad1
    reg csr_dicad0
    reg csr_dicad1

    echo "Starting ICache tag and status write"
    # 1. Write dicawics: array=1 way=0 index=8
    reg csr_dicawics 0x1000040
    # 2. Write tag, valid, LRU information to dicad0, and parity to dicad1
    reg csr_dicad0 0x0
    reg csr_dicad1 0x0
    # 3. Write 1 to dicago to trigger Icache write operation
    reg csr_dicago 1

    echo "ICache test done."
}

# Mem access mode
riscv set_mem_access abstract

# Be verbose about GDB errors
gdb_report_data_abort enable
gdb_report_register_access_error enable

# Always use hardware breakpoints.
gdb_breakpoint_override hard
